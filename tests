
########## tests
syntaxis: 

#num   -> number of test (to make note of it in "bugs" file)
command
prompt in bash
###############

#1
<1<2
bash: syntax error near unexpected token `1'

#2
<1 <2

#3
<1<<2
bash: syntax error near unexpected token `1'

#4
<1<<<2 
bash: syntax error near unexpected token `1'

#5
<
bash: syntax error near unexpected token `newline'

#6
<<
bash: syntax error near unexpected token `newline'

#7
<<<
bash: syntax error near unexpected token `newline'

#8
5 6 y 7 pero con >

#9
'<'
bash: <: command not found

#10
'<'<
bash: syntax error near unexpected token `newline'

#11
(enter)
aparece nueva linea de minishell

#12
echo -n hola
hola(seguido del nombre de la terminal, p ej hola%n@%m:%1d/$)


#13
cat loquesea |
deja abierto el stdin, se introducen las líneas del pipe que se va a introducir


#14
ctrl-D con heredoc abierto
debe enviar señal de EOF, como si se hubiera introducido el "eof" correspondiente. p ej, si << aaa, se puede cortar el heredoc escribiendo "aaa" o pulsando ctrl-D

#15
ctrl-C está mostrando ^C por pantalla, creo que no debería mostrarlo, al menos cuando minishell está en estado de "espera", esperando recibir el comando.

#16
ctrl-D cuando se pulsa en estado de espera debe mostrar "exit\n", por pantalla

#17
<1<2
dos infiles sin separación tiene que dar este error:
bash: syntax error near unexpected token `1'

creo que esto se puede solucionar diciendo que si dentro del nombre de un infile hay un carácter que no sea alfanumérico, devuelva error
actualmente, ante un <, <<, > o >> estamos parseando todo hasta el siguiente <, <<, > o >>, habría que cambiar para que leyese hasta el siguiente espacio

#18
""
bash: : command not found

actualmente, en caso de no haber ningún comando, el campo "cmd" se queda con esto "cmd: /usr/local/bin/", haciendo que salga otro error diferente (ya que intenta ejecutar esa ruta") 


#19


