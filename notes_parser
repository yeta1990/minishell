
./minishell
cmd -flags <infile <infile2 >outfile >>outfile2

get next line (o readline) infinito (while (true)) para que el usuario vaya introduciendo comandos.
cuando pulsa intro, lexer/parser:

- es car√cter reservado? <, <<, >, >>, $, etc.
- si no lo es, asumimos que es un comando?
	- si asumimos que es un comando, el siguiente argumento es un car√cter reservado? si no, todo lo que haya despu√©s del cmd hasta un pipe o hasta un car√°cter reservado, es flag que acompa√a al cmd.
		grep hola, ls -la
- si es cmd o es otra acci√n, almacenamos.
	- cmd (ruta absoluta?)
	- char ** con cmd + flags + acabado en NULL para execve
	- redirecciones standard input, standard output y standard error

typedef struct s_cmd
{
	char *cmd;
	char **cmd_complete;
	char **stdins; //nombres de archivo de redirecciones stdin
	char **stdout; //nombres de archivo de redirecciones stout
	char **stderr; //nombres de archivo de redirecciones sterr
	int		heredoc;
	t_cmd *next;
}	t_cmd;

typedef struct s_data
{
	int			num_cmds;
	int			num_pipes;
	char		**env;
	t_history	**history;
	t_cmd		**cmds;
}

typedef struct s_history
{
	char *cmd_line;
	t_history *next;
}	t_history;
